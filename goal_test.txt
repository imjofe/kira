import 'package:flutter/material.dart';
import 'package:flutter/services.dart';
import 'package:flutter_test/flutter_test.dart';
import 'package:kira_flutter_client/ui/goals/goals_page.dart';
import 'package:kira_flutter_client/ui/goals/goals_provider.dart';
import 'package:provider/provider.dart';

GoalDto _mock() => GoalDto(
      id: 1,
      title: 'Drag me',
      description: 'demo',
      column: 'Backlog',
    );

void main() {
  TestWidgetsFlutterBinding.ensureInitialized();

  test('move() changes column', () {
    const MethodChannel('kira/node')
        .setMockMethodCallHandler((MethodCall methodCall) async => null);

    final p = GoalsProvider(seed: [_mock()]);
    p.fetch();
    expect(p.backlog, isNotEmpty);
    p.move(1, 'Done');
    expect(p.done.single.id, 1);
  });

  testWidgets('tap âž¡ moves goal to next column', (tester) async {
    const MethodChannel('kira/node')
        .setMockMethodCallHandler((MethodCall methodCall) async => null);

    final provider = GoalsProvider(seed: [_mock()])..fetch();

    await tester.pumpWidget(
      ChangeNotifierProvider.value(
        value: provider,
        child: const MaterialApp(home: GoalsPage()),
      ),
    );
    await tester.pumpAndSettle();

    // tap the move button
    await tester.tap(find.byKey(const ValueKey('move_1')));
    await tester.pumpAndSettle();

    // expect provider column updated
    expect(provider.active.single.id, 1);
    // and UI reflects it (title now under Active column)
    expect(find.byKey(const ValueKey('title_1')), findsOneWidget);
  });
}
