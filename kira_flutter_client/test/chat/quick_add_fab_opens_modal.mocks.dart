// Mocks generated by Mockito 5.4.6 from annotations
// in kira_flutter_client/test/chat/quick_add_fab_opens_modal.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i8;
import 'dart:collection' as _i4;
import 'dart:ui' as _i10;

import 'package:kira_flutter_client/llm/llama_bridge.dart' as _i3;
import 'package:kira_flutter_client/models/session_model.dart' as _i13;
import 'package:kira_flutter_client/models/task_dto.dart' as _i12;
import 'package:kira_flutter_client/providers/goals_provider.dart' as _i5;
import 'package:kira_flutter_client/services/websocket_service.dart' as _i2;
import 'package:kira_flutter_client/ui/chat/chat_provider.dart' as _i6;
import 'package:kira_flutter_client/ui/chat/message_dto.dart' as _i7;
import 'package:kira_flutter_client/ui/schedule/schedule_provider.dart' as _i11;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i9;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeWebSocketService_0 extends _i1.SmartFake
    implements _i2.WebSocketService {
  _FakeWebSocketService_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeLlamaBridge_1 extends _i1.SmartFake implements _i3.LlamaBridge {
  _FakeLlamaBridge_1(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeUnmodifiableListView_2<E> extends _i1.SmartFake
    implements _i4.UnmodifiableListView<E> {
  _FakeUnmodifiableListView_2(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeAsyncValue_3<T> extends _i1.SmartFake implements _i5.AsyncValue<T> {
  _FakeAsyncValue_3(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [ChatProvider].
///
/// See the documentation for Mockito's code generation for more information.
class MockChatProvider extends _i1.Mock implements _i6.ChatProvider {
  MockChatProvider() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.WebSocketService get ws =>
      (super.noSuchMethod(
            Invocation.getter(#ws),
            returnValue: _FakeWebSocketService_0(this, Invocation.getter(#ws)),
          )
          as _i2.WebSocketService);

  @override
  _i3.LlamaBridge get gemma =>
      (super.noSuchMethod(
            Invocation.getter(#gemma),
            returnValue: _FakeLlamaBridge_1(this, Invocation.getter(#gemma)),
          )
          as _i3.LlamaBridge);

  @override
  bool get isFake =>
      (super.noSuchMethod(Invocation.getter(#isFake), returnValue: false)
          as bool);

  @override
  List<_i7.MessageDto> get messages =>
      (super.noSuchMethod(
            Invocation.getter(#messages),
            returnValue: <_i7.MessageDto>[],
          )
          as List<_i7.MessageDto>);

  @override
  bool get isTyping =>
      (super.noSuchMethod(Invocation.getter(#isTyping), returnValue: false)
          as bool);

  @override
  bool get isLoading =>
      (super.noSuchMethod(Invocation.getter(#isLoading), returnValue: false)
          as bool);

  @override
  bool get hasListeners =>
      (super.noSuchMethod(Invocation.getter(#hasListeners), returnValue: false)
          as bool);

  @override
  void dispose() => super.noSuchMethod(
    Invocation.method(#dispose, []),
    returnValueForMissingStub: null,
  );

  @override
  _i8.Future<void> initCache() =>
      (super.noSuchMethod(
            Invocation.method(#initCache, []),
            returnValue: _i8.Future<void>.value(),
            returnValueForMissingStub: _i8.Future<void>.value(),
          )
          as _i8.Future<void>);

  @override
  _i8.Future<void> fetchHistory() =>
      (super.noSuchMethod(
            Invocation.method(#fetchHistory, []),
            returnValue: _i8.Future<void>.value(),
            returnValueForMissingStub: _i8.Future<void>.value(),
          )
          as _i8.Future<void>);

  @override
  _i8.Future<void> send(String? text) =>
      (super.noSuchMethod(
            Invocation.method(#send, [text]),
            returnValue: _i8.Future<void>.value(),
            returnValueForMissingStub: _i8.Future<void>.value(),
          )
          as _i8.Future<void>);

  @override
  _i8.Stream<String> runChat(String? userInput) =>
      (super.noSuchMethod(
            Invocation.method(#runChat, [userInput]),
            returnValue: _i8.Stream<String>.empty(),
          )
          as _i8.Stream<String>);

  @override
  _i8.Future<String> debugBuildPrompt(String? userInput) =>
      (super.noSuchMethod(
            Invocation.method(#debugBuildPrompt, [userInput]),
            returnValue: _i8.Future<String>.value(
              _i9.dummyValue<String>(
                this,
                Invocation.method(#debugBuildPrompt, [userInput]),
              ),
            ),
          )
          as _i8.Future<String>);

  @override
  void addListener(_i10.VoidCallback? listener) => super.noSuchMethod(
    Invocation.method(#addListener, [listener]),
    returnValueForMissingStub: null,
  );

  @override
  void removeListener(_i10.VoidCallback? listener) => super.noSuchMethod(
    Invocation.method(#removeListener, [listener]),
    returnValueForMissingStub: null,
  );

  @override
  void notifyListeners() => super.noSuchMethod(
    Invocation.method(#notifyListeners, []),
    returnValueForMissingStub: null,
  );
}

/// A class which mocks [ScheduleProvider].
///
/// See the documentation for Mockito's code generation for more information.
class MockScheduleProvider extends _i1.Mock implements _i11.ScheduleProvider {
  MockScheduleProvider() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.UnmodifiableListView<_i12.TaskDto> get tasks =>
      (super.noSuchMethod(
            Invocation.getter(#tasks),
            returnValue: _FakeUnmodifiableListView_2<_i12.TaskDto>(
              this,
              Invocation.getter(#tasks),
            ),
          )
          as _i4.UnmodifiableListView<_i12.TaskDto>);

  @override
  bool get hasListeners =>
      (super.noSuchMethod(Invocation.getter(#hasListeners), returnValue: false)
          as bool);

  @override
  _i8.Future<void> fetchToday() =>
      (super.noSuchMethod(
            Invocation.method(#fetchToday, []),
            returnValue: _i8.Future<void>.value(),
            returnValueForMissingStub: _i8.Future<void>.value(),
          )
          as _i8.Future<void>);

  @override
  _i8.Future<void> updateStatus(int? id, String? status) =>
      (super.noSuchMethod(
            Invocation.method(#updateStatus, [id, status]),
            returnValue: _i8.Future<void>.value(),
            returnValueForMissingStub: _i8.Future<void>.value(),
          )
          as _i8.Future<void>);

  @override
  _i5.AsyncValue<List<_i13.SessionModel>> watchSessionsForDate(
    DateTime? date,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#watchSessionsForDate, [date]),
            returnValue: _FakeAsyncValue_3<List<_i13.SessionModel>>(
              this,
              Invocation.method(#watchSessionsForDate, [date]),
            ),
          )
          as _i5.AsyncValue<List<_i13.SessionModel>>);

  @override
  _i8.Future<void> completeSession(int? sessionId) =>
      (super.noSuchMethod(
            Invocation.method(#completeSession, [sessionId]),
            returnValue: _i8.Future<void>.value(),
            returnValueForMissingStub: _i8.Future<void>.value(),
          )
          as _i8.Future<void>);

  @override
  void initWithSeedSessions(List<_i13.SessionModel>? sessions) =>
      super.noSuchMethod(
        Invocation.method(#initWithSeedSessions, [sessions]),
        returnValueForMissingStub: null,
      );

  @override
  _i8.Stream<String> runSchedule(String? userInput, {bool? asJson = false}) =>
      (super.noSuchMethod(
            Invocation.method(#runSchedule, [userInput], {#asJson: asJson}),
            returnValue: _i8.Stream<String>.empty(),
          )
          as _i8.Stream<String>);

  @override
  void addListener(_i10.VoidCallback? listener) => super.noSuchMethod(
    Invocation.method(#addListener, [listener]),
    returnValueForMissingStub: null,
  );

  @override
  void removeListener(_i10.VoidCallback? listener) => super.noSuchMethod(
    Invocation.method(#removeListener, [listener]),
    returnValueForMissingStub: null,
  );

  @override
  void dispose() => super.noSuchMethod(
    Invocation.method(#dispose, []),
    returnValueForMissingStub: null,
  );

  @override
  void notifyListeners() => super.noSuchMethod(
    Invocation.method(#notifyListeners, []),
    returnValueForMissingStub: null,
  );
}
